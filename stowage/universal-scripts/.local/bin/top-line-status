#!/usr/bin/env bash
set -u
IFS=$'\n\t'

# Show a high-level summary of the terminal environment

AWS_PROFILE=${AWS_PROFILE:-}

RED=$(tput setaf 1)
BOLD=$(tput bold)
RESET=$(tput sgr0)

main() {
	date_string=$(date "+%a %b %d, %Y :: %R  (%:z)")
	indent "$date_string"

	local tmux_line
	tmux_line=$(tmux_status)
	if [[ -z "$tmux_line" ]]; then
		indent "no tmux sessions running"
	else
		indent "tmux: $tmux_line"
	fi

	local aws_line
	aws_line=$(aws_status)
	if [[ -n "$aws_line" ]]; then
		indent "$aws_line"
	fi

	local k8s_info
	k8s_info=$(kubernetes_status)
	if [[ -n "$k8s_info" ]]; then
		indent "$k8s_info"
	fi

	echo
}

tmux_status() {
	local tmux_running=""
	2>/dev/null tmux has-session && tmux_running="running"

	if [[ -z "$tmux_running"  ]]; then
		return 0
	fi

	tmux_client_count=$(tmux list-clients | wc -l)
	tmux_session_count=$(tmux list-sessions | wc -l)
	tmux_window_count=$(tmux list-windows -a | wc -l)
	printf "%s/%s/%s (sessions/windows/clients)" \
		"$tmux_session_count" \
		"$tmux_window_count" \
		"$tmux_client_count"
}

aws_status() {
	local aws_present
	aws_present=$(present_check "aws")
	if [[ -z "$aws_present" ]]; then
		return 0
	fi

	local curr_profile
	curr_profile=${AWS_PROFILE:-"[NONE]"}

	echo -n "AWS profile: $curr_profile"
}

kubernetes_status() {
	local kubectl_present
	kubectl_present=$(present_check "kubectl")
	if [[ -z "$kubectl_present" ]]; then
		return 0
	fi

	local k8s_json
	k8s_json=$(kubectl config view --minify --output "jsonpath={..context}")

	local cluster namespace
	cluster=$(echo "$k8s_json" | jq -r ".cluster")
	namespace=$(echo "$k8s_json" | jq -r ".namespace")

	if [[ "$cluster" = "docker-desktop" ]]; then
		printf "kubernetes: [%s] %s\n" "$namespace" "$cluster"
	else
		printf "kubernetes: ${BOLD}${RED}[%s] %s${RESET}\n" "$namespace" "$cluster"
	fi

}

# accepts one argument of an executable name, then checks for it on the PATH
# prints "present" if present, empty string otherwise
present_check() {
	local exec_name
	exec_name=${1:-}
	if [[ -z "$exec_name" ]]; then
		>&2 echo "Empty exec name for present_check"
		return 1
	fi

	local present=""
	2>/dev/null 1>/dev/null type "$exec_name" && present="present"
	echo -n "$present"
}

INDENT_STRING="  "
indent() {
	local input
	input=${1:-}
	# shellcheck disable=SC2001
	echo -e "$input" | sed "s/^/${INDENT_STRING}/"
}

main
